version: "3.8"

services:
  nginx:
    container_name: nginx
    image: nginx:1.13
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    volumes:
      - dhparam:/etc/ssl/certs
      - ./nginx/conf.d:/etc/nginx/conf.d
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email hagoga.pr@gmail.com --agree-tos --no-eff-email --force-renewal -d 1469629-cm31020.tw1.ru -d www.1469629-cm31020.tw1.ru


  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    environment:
      - PGDATA=var/lib/postgresql/data
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  app:
    container_name: sportique_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/postgres
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - postgresql
    restart: always
    networks:
      - app-network
    volumes:
      - logs:/logs

volumes:
  certbot-etc:
  certbot-var:
  web-root:
  db-data:
  logs:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/TP_project_backend/backend/dhparam/
      o: bind

networks:
  app-network:
    driver: bridge
